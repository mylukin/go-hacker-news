Hello everyone, this is the 2025-10-22 episode of Hacker News Daily Podcast. Today, we have stories about a new open-source AI video tool, Google's quantum computing progress, a big step for open groupware, a serious security bug at the FIA, why compilers use SSA, practical shell scripts, a safer way to add HTML, an AI job in healthcare, André Gorz on the meaning of work, and Rivian’s first electric bike.

First, let's talk about Ovi, a new AI model from Character AI and Yale University. Ovi can create both video and audio from text or images, making short videos that match sound and picture. It is open source and stands out because it can do high-quality audio and video at the same time. You can give it just text, or text plus an image, and it will make a 5-second video. Ovi is trained at 720x720 resolution but can do higher resolutions like 1280x704, and supports different shapes like vertical or square. You can try Ovi online, and there’s a plugin for ComfyUI in progress. The project gives example prompts and lets you control speech and audio with tags. Installing Ovi needs a strong GPU—at least 32GB VRAM—but there are ways to run it on 24GB GPUs, with some loss in quality. You can edit a config file to control video size, quality, and how much the output matches the prompt. The team thanks other open-source projects like Wan2.2 and MMAudio.

On Hacker News, users are impressed by Ovi’s high-quality results, especially how well audio and video match. Many compare it to big models like Sora or Veo and are happy to see open source catching up. Some worry about the high hardware requirements, asking for a smaller model for consumer GPUs. Others discuss risks of misuse, like fake videos with real voices, and ask about lip-sync and background sounds. Several people share their own tests—some got great results, others found glitches. There is debate about the future: some think these tools will soon be easier and cheaper, while others warn that hardware needs will slow progress. Many hope for cloud demos so everyone can try Ovi. Overall, there is a lot of excitement, but also some caution.

Next, Google has announced results from their Willow quantum chip, using a new algorithm called Quantum Echoes. This is a big step because the chip showed a real, verifiable quantum advantage—solving problems like finding molecular structures up to 13,000 times faster than any classical computer. It’s the first time a quantum computer ran an algorithm that can be checked and repeated for accuracy, not just random results. The Willow chip has 105 qubits and very low error rates, allowing it to do complex calculations well. Google used this to study molecules with up to 28 atoms, getting results that match traditional methods and even finding new information. This could help in drug discovery and materials science. The team now aims to make even bigger and more reliable quantum computers.

From the comments, people are excited about the speedup and that results can now be verified. Some point out the problems solved are still very specialized, not general purpose. A few warn that “quantum advantage” is sometimes just marketing, and want more independent tests. Developers ask if this will help with cryptography or machine learning soon, but most agree it’s not there yet. Many say lowering error rates is a big achievement and could make quantum computers useful for longer tasks. Some are skeptical and say it may take years before most people see real-world quantum benefits.

Now, to open groupware: Stalwart has announced full support for JMAP protocols for calendars, contacts, files, and sharing—making it the first server to do this. JMAP is a modern, JSON-based set of protocols meant to replace old, XML-based systems like CalDAV and CardDAV, which are hard to work with and often buggy. JMAP uses JSON over HTTPS, making it faster and simpler for both developers and users. New formats like JSCalendar and JSContact also use JSON, which is easier to read and work with. Stalwart’s change should help new apps work together more easily, and other tools like Mailtemi and Parula are adding JMAP support too. Stalwart is now feature complete and working toward a 1.0.0 release.

In the comments, many users are happy to see a modern, easy-to-use replacement for old XML standards. Some say JMAP will make building apps much easier, while a few worry about how quickly apps will switch over, as many still use the old protocols. There are questions about compatibility with tools like Thunderbird or Apple Calendar, and interest in syncing with mobile devices. Some developers are excited to build with JMAP, while others ask about security and privacy. A few hope this will break up the hold of big companies over email and collaboration tools. Most comments are hopeful and see this as a big improvement.

Now, a big security story from Formula 1. Researchers found a bug in an FIA website that let them become admin users and access private data of famous drivers like Max Verstappen. The site is used to manage driver categories and collects personal documents. The bug was simple: the website used a basic HTTP PUT request to update profiles. By editing a “roles” parameter in the request, the researchers made themselves admins and could see emails, phone numbers, passport scans, resumes, and password hashes—even for top drivers. They stopped before misusing any data and reported the issue to FIA, who fixed it quickly.

Hacker News users were shocked that such a simple bug could exist in a high-profile site. Many say mass assignment bugs are common when developers do not understand their frameworks’ security settings. Others point out that handling roles or admin rights from user input is a big mistake. There are calls for better security audits, and praise for responsible disclosure. People discuss how even big organizations can miss basic security flaws, and say regular security reviews are a must. Some joke that F1 should focus less on sponsorships and more on IT. There is debate about whether open source or commercial software is safer, and many thank the researchers for sharing details so others can learn.

Now, a technical topic: why compilers use SSA, or Static Single Assignment form. SSA is a way for compilers to represent programs so every variable is only assigned once. This makes it easier to analyze and optimize code, turning it into a graph where you can see how values flow. By writing code in SSA form, compilers can find and remove useless code, spot independent operations, and optimize memory use. The article explains how loops and branches are handled with basic blocks and “phi” nodes, and how compilers clean up after optimizations.

In the comments, people say this is a great explanation of SSA. Some note it is powerful but tricky to implement, especially with pointers or low-level languages. Others discuss how functional languages do things differently. There is talk about how SSA makes some optimizations easy but can be hard to turn back into machine code if there are not enough registers. People mention compilers like LLVM, GCC, and Go and their different approaches. Some warn that beginners may still find SSA hard, but others share resources to help learn. Most agree SSA is a core idea in compiler design today.

Next, a story about practical shell scripts. A developer shared scripts they use to make daily tasks easier—copying text, managing files, running commands, and working with the web. There are scripts for clipboard work, making and entering folders, moving files to trash, serving files, downloading media, working with text and dates, playing music, handling processes, and changing system settings. There are helpers for notifications, UUIDs, and viewing command sources.

In the comments, many say they have similar scripts and find personal tools like this very useful. Some share their own favorites, while others prefer using existing tools like ‘ag’ or ‘jq’. People note that making scripts is a good way to learn and save time, but warn that too many custom scripts can make switching computers harder. There is talk about sharing scripts with co-workers and keeping them portable. Some like that these scripts work on both macOS and Linux. Many thank the author for the ideas.

Now, a new browser API: `setHTML()`. This method is an experimental way to add HTML to a page safely. Unlike `innerHTML`, `setHTML()` removes dangerous parts like `<script>` tags and unsafe attributes, helping prevent XSS attacks. You can give it options to control what tags and attributes are allowed, but even then, scripts are always removed. It is not yet supported in all browsers, so you need to check compatibility before using it. It is not part of the Trusted Types API, so it is only for basic HTML cleaning. The article shows code examples and a live demo.

In the comments, people are glad to see a safer option than `innerHTML`, since XSS is a big problem. Some warn that browser support is still limited and you cannot rely on this alone yet. Others mention that libraries like DOMPurify have done this for years and wonder if this new API will replace such libraries. Some are unsure if developers will use sanitizer options correctly, and remind everyone to always be careful with user input. There are questions about performance, but most think it should be fast. Many look forward to the day when this is standard everywhere.

Next, a job post from InpharmD, a healthcare tech company looking for an NLP/ML Engineer. The company builds AI tools for doctors and nurses, is profitable and growing, and focuses on making clinical decisions easier. They want someone with experience building AI or healthcare tools, with skills in Python, Rust, or Next.js, and experience with LLMs like Llama or Mistral, plus vector databases, AWS, and background job systems. The job pays about $150,000 and offers stock options, with remote or Atlanta work possible.

In the comments, people like that the company is growing with little outside funding. Some say a small team means more learning and impact. The salary is seen as good for a small company. Some worry that the job asks for too many skills in one person. Others discuss the challenge of improving AI accuracy in healthcare. There are questions about remote work, diversity, and real-world healthcare knowledge. Many find the role exciting but demanding, and see both risks and big opportunities.

Now, a story about André Gorz, who wrote about why many people are unhappy with their jobs. Gorz saw that work is changing with new technology and more people feel their jobs are pointless. In his book “Farewell to the Working Class,” he argued that work is no longer the center of political life, as jobs become less stable and more people work in services or gig jobs. He called today’s workers the “neo-proletariat”—often overqualified, stressed, and managed by algorithms. Gorz said real freedom comes from breaking away from work, not just changing it. He called for shorter working hours, basic income, and more time for activities that bring joy. He wanted people to stop thinking that only paid work gives life value.

In the comments, some agree with Gorz and say their own jobs feel pointless. Others say not everyone can just stop working, and some jobs are still needed. Some doubt that basic income is practical, or say people need structure and purpose. There are stories from readers who changed careers to find better balance, but worries that most people do not have this choice. Some see hope in building local communities, while others are skeptical big changes will happen soon. Many agree the pandemic made people think more about what matters.

Finally, Rivian, known for electric cars, has launched its first electric bike, the TM-B. The TM-B is designed for both city and trail use, with a strong motor, long battery life, and sturdy frame. It has racks for cargo, removable battery, built-in lights, and a modern look. The display shows speed, distance, and battery level.

In the comments, people are excited to see Rivian enter the e-bike market. Some like the design and mix of features. A few think the price might be high, since Rivian is a premium brand, and wonder if they can compete with bike-focused companies. Some want a lighter or simpler bike, and worry about repair costs. E-bike owners share what matters to them—like range and comfort. Many are happy to see more choices, hoping this will push other companies to improve. Some hope Rivian will support open standards for parts and repairs. Overall, people are interested and curious to see how the TM-B will do.

That’s all for today’s episode. Thank you for listening to Hacker News Daily Podcast. See you next time.