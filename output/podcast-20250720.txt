Hello everyone, this is the 2025-07-20 episode of Hacker News Daily Podcast. Today, we have some very interesting news from the worlds of hardware, software, web development, AI, and even color science. Let’s dive right in.

First, Samsung and Johns Hopkins have made a new cooling device using Peltier technology, which does not need any normal refrigerants. This device uses thin-film semiconductors to move heat, so one side gets cold and the other hot, just by running electricity through it. Usually, fridges use gas and compressors—big parts that use chemicals that can harm the environment. But with this new Peltier device, cooling can be done in a much smaller and greener way.

In 2024, Samsung released a hybrid fridge that uses both a compressor and Peltier cooling. The compressor does the main job, but if you add a lot of groceries or hot food, the Peltier device switches on for faster cooling. It also helps keep the temperature stable when the fridge needs to defrost. To make this work well, Samsung and Johns Hopkins had to solve many heat transfer problems and create new materials. The result is a Peltier device that is 75% more efficient than past models, and the fridge uses up to 30% less power than the top-rated models in Korea.

Samsung hopes to bring this technology to more places, including hot and humid countries. Their long-term goal is to make fridges that use only Peltier cooling, with no harmful gases at all. They also want to use AI and 3D printing to make smarter, more efficient fridges.

On Hacker News, people had mixed reactions. Some were excited about fridges without harmful gases and better energy use. Others remembered old Peltier coolers and worried about efficiency for big jobs. Many wanted more details on energy savings, cost, and how easy it is to repair. Some said this technology could lead to smarter and better-designed fridges, while others were more cautious and wanted to see real-world tests. In general, there is hope for a greener future, but also plenty of questions about how well Peltier cooling will work in our homes.

Next, let’s talk about the recent change in OpenBSD’s stdio library. OpenBSD has made the FILE type opaque, which means the internal structure is now hidden from user programs. In the past, some programs could look inside the FILE structure and use its details. Now, only the library itself can see what’s inside. If programs try to use the old parts, they will not compile anymore. A lot of libraries and programs needed updates, and library version numbers have gone up. The OpenBSD team says this will make the system safer and easier to maintain in the long run.

In the comments, many people agree this is a good move for security and code quality. Some developers remember when Linux and other systems made similar changes and had the same problems at first. A few are worried that debugging and low-level programming will be harder, but most think the benefits are worth the pain. There’s also talk about cross-platform code, but most standard code should be fine. Many thank the team for the hard work, and some joke that now more people will actually read the documentation. Overall, most agree this is a big and positive step for OpenBSD.

Now, let’s look at XMLUI, a new tool for building web apps using simple XML-like code. XMLUI brings back the easy, component-based style of old tools like Visual Basic, but for the modern web. You can make apps by writing short XML code—no need for deep React or CSS knowledge. There are many built-in components, like DataSource and Table, and you can easily add your own. The system handles reactivity, so the app updates automatically, like a spreadsheet. You can also theme your app without writing CSS, just by setting a few variables.

If you need more, you can add small bits of JavaScript, but XMLUI keeps things simple. There’s also the Model Context Protocol, which helps AI assistants answer questions about XMLUI code and patterns. This makes it easier to learn and get AI help. You can even use XMLUI for content management and mix app code with live demos in your docs. If you need a special UI, XMLUI can wrap existing React components too. Deployment is easy—you only need a few files, and you can host your app anywhere.

On Hacker News, many people liked the goal of making UI development easier. Some remembered how easy and fun old tools like Visual Basic or Delphi were, and hope XMLUI can bring that back. Others are more cautious, pointing out past problems with declarative UIs and worries about lock-in or scaling. Some experts say React’s complexity is there for a reason, but others reply that most business apps are simple and don’t need all that. People like the easy theming and AI integration, and are curious if XMLUI will fit into existing workflows. Overall, there is hope, but also caution about making simple tools that stay flexible and future-proof.

Now to something a bit different—color science. Scientists have found ways to make people see new, never-before-seen colors by using lasers to activate only one type of color cell in the eye. Normally, our eyes have three types of cones, but their ranges overlap, so we never see just one firing at a time. When lasers target only the M-cones, people see a super-bright, unique blue-green color. There’s also an optical illusion trick with a red circle on a blue-green background that can let you see a new shade for a moment.

The article also explains color spaces and how computer screens can’t show all the colors our eyes can see, especially the new ones made by lasers. The author made a tool for readers to play with these color illusions and invites feedback from colorblind users. In the comments, people are amazed and share their own experiences. Some debate if screen illusions can really match what lasers do. There are questions about helping people with color blindness and talk about how our color sense is shaped by evolution and technology. Some wish the study shared more details from people who saw the new colors. Others tried the linked illusion and got different results—some saw intense colors, others did not.

In other news, JanitorAI will block all UK users because of the new Online Safety Act. The team had only four days to warn users and is very sorry. The law is long and expensive to follow, with legal risk checks and ID checks for users that only big companies can handle. Small companies like JanitorAI cannot do it and risk huge fines or even jail time. So they have no choice but to block UK users.

Most Hacker News commenters agree the law is too strict and hurts small startups. Many worry that only big companies will survive and that tech innovation in the UK will suffer. Some say users will use VPNs to get around blocks, and a few hope the law will change, but most are not hopeful. Some worry other countries might make similar rules, and many feel sad for UK users losing access to new technology. The general feeling is that this is a bad result for both tech and users in the UK.

Moving to AI, an article discusses how coding with large language models like Gemini 2.5 PRO has changed things in 2025. LLMs help programmers find bugs, test ideas quickly, and even work in areas outside their main skills. The best results come when humans and LLMs work together—humans give clear instructions and check the AI’s work. LLMs can speed up small or boring tasks, but it’s important not to trust them too much for big projects, as they can make mistakes or messy code. The author suggests using the best LLMs directly, giving them lots of context, and never letting them run wild alone. For now, human plus LLM is the sharpest way to code.

Hacker News comments agree that LLMs are helpful if used well, but you must check their work. Some warn that using LLMs too much can make people lazy or less careful. Others say that talking clearly to LLMs is a skill by itself. Some are excited for the future, but others say it’s easy to spot AI-written code. A few think companies should teach devs how to use LLMs well, as it’s a key skill now. Some worry that not using LLMs will leave you behind, while others just see them as another tool, like Stack Overflow or Google.

Next, we have a fun article about making computer images look like they move with a hand-drawn, cartoon-style “jitter” effect, called “boiling” or “line boil.” In old cartoons, artists drew the same picture many times with small changes, which made still images look alive. The author shows how to copy this look using SVG filters in the browser, with just a few lines of code. By using noise and displacement maps, images can wobble and look less perfect. JavaScript changes the noise over time to make the effect move.

Hacker News readers liked the demos and thought they were fun and easy to understand. Some remembered this effect from old cartoons and shared their own methods. There were talks about computer power and making the effect work with other image types. Some warned not to use the effect too much, but most agreed it makes images and websites more interesting and friendly. People also liked the clear code and wanted to try it in their own projects.

Now for something important in video tech: FFmpeg developers have made their software much faster by rewriting some parts in assembly language. FFmpeg is a popular tool for handling video and audio. The new assembly code makes some video encoding and decoding up to 100 times faster. The team had to understand CPUs very well and test the code everywhere. This means FFmpeg can now handle high-quality video with less computer power, which is good for video makers and services.

In the comments, people are impressed by the speed boost and say it shows the power of low-level programming. Some warn that assembly code is hard to maintain and that not many people know how to write it. Others say this is proof that compilers still can’t match expert humans for the most important code. There is also talk about how open source lets experts push the limits for everyone, and some share their own experiences with assembly.

Let’s look at Subreply, an open-source, text-only social network you can find on GitHub. It is simple and fast, with no images or extra features—just text. You can run it on your own computer and the code is easy to read and change. The project focuses on speed and clear code, with regular updates.

Many in the comments like the idea of a simple, text-only network, saying they are tired of big sites with ads and too many features. Some value being able to control their own data. Others wonder if Subreply can stay friendly as it grows, and some worry about spam or moderation. Some want new features, but most say it should stay simple. There are questions about hosting and comparisons to other small social projects, but overall, people find simple tools like this refreshing and worth trying, even for small groups.

Finally, Teufel has made their first open-source Bluetooth speaker, the MYND, focused on long life, repair, and user creativity. The battery is easy to replace, most parts can be swapped without special tools, and the body uses up to 50% recycled plastic. All design files are online, so you can 3D print the case or build the speaker from scratch, except for some special drivers. You can change the sound settings, and the speaker is small, strong, and portable, with features like water resistance and a power bank for your phone.

Teufel hopes people will recycle or even turn the speaker into something new, like a guitar amp or smart device. The open-source files let you upgrade or change the speaker as tech moves forward.

On Hacker News, users liked the open-source idea and focus on repair. Some worry about how “open” it really is, since some parts are only from Teufel. Others like the design and hope it will fight electronic waste, but some think most people still want cheap, non-repairable speakers. Some hackers are excited to turn the MYND into other devices, while others wonder if “open source” is just a marketing trick. Still, many hope to see more products like this in the future.

That’s all for today’s episode. Thank you for listening to Hacker News Daily Podcast. We hope you found these stories interesting and useful. See you next time!