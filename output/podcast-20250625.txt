Hello everyone, this is the 2025-06-25 episode of Hacker News Daily Podcast. Today, we bring you stories about open-source software, math puzzles, clean energy, programming wisdom, AI animation, personal growth, and the art of meeting offline.

First, we look at a big move from the QEMU project. QEMU is an important open-source project, and it just made a strict new rule: you cannot use AI code generators—like ChatGPT or Copilot—to write code for QEMU. The main reason is legal risk. No one is sure who owns AI-generated code, or if the AI copies code from somewhere else. If AI code breaks copyright, it could be very hard to remove or fix it later, because it’s hard to know what part came from AI and what part was changed by humans. There’s also a worry that if you call AI code “public domain,” open-source licenses may not protect the project as well. That could let others use or abuse the code without following QEMU’s rules. So, the rule is simple: no AI-generated code at all, even if you edit it later. The QEMU team says this is safest for now, though they may change it in the future.

People in the comments had many views. Some agree with QEMU, saying it’s smart to avoid legal trouble while laws are unclear. Others think the rule is too strict and hard to enforce, since AI help is built into many code editors now. Some worry it could slow QEMU down, while other projects using AI might move faster. But others reply there’s no proof that AI code is better or that human-only projects are losing. Many developers use AI for small tasks like autocomplete or quick scripts but always check and rewrite the code themselves. Some say reviewing AI code is hard, because it may look good but hide bugs, wasting expert time. Others point out that low-quality AI code can make open-source maintainers’ work harder, and that people may use AI to fake skills and spam projects. A few wonder if this rule is like “cheating if you get caught,” since it’s so hard to tell what code came from AI. But most agree it’s important to set clear rules, even if they change later as AI and the law grow. The question is hard, and the answer may change in time.

Next, we have a fun math story about a pyramid-shaped object—a tetrahedron—that always lands on one face, no matter how you drop it. Mathematicians solved a question from almost 60 years ago: can you make a four-sided pyramid that, with uneven weight, always sits on one face? Using computers and careful engineering, they built a real tetrahedron with light carbon fiber and a heavy tungsten carbide piece inside. The weight had to be very precise—even a bit of glue could ruin it. After many tries, they succeeded. The model always flips to the same face, proving the theory.

This work shows how experiments and new tools can help solve old problems. The team hopes this idea could help design things like self-righting spacecraft. They also learned that simple-looking problems can need a lot of effort and technology to solve. In the comments, people joked that this would be a terrible four-sided die, since it always lands the same way. Some wondered if you could make shapes with two stable faces, or use these ideas for security. Others pointed out that balls with a heavy side can self-right too, but they can roll away. The difference between curved shapes like the gömböc and flat-sided ones like this pyramid was also discussed. Some were disappointed that the solution needs such big weight differences and can’t be made with just one material or with simple 3D printing. Others pointed out that for real uses, like moon landers, it does not matter if the object is curved or flat—what matters is that it rights itself. Some talked about old math papers and if they really proved what they claimed. Finally, people noted that even “simple” inventions often need precise tools and materials to work, and hoped to buy one of these special pyramids for fun.

Our next story is from Adjuntas, Puerto Rico, where the town kept its power on during a blackout, thanks to solar microgrids and battery storage. While the rest of Puerto Rico was in the dark, Adjuntas used a new setup to keep homes and businesses running. Puerto Rico’s main electric grid is old and weak, often failing after storms. The government has tried to fix it, but slow rules and politics have stopped much progress. Now, the U.S. is moving more money to fix the main grid, taking some away from rooftop solar, which has made some people angry.

Because the main grid is unreliable, many people are buying their own solar panels and batteries. Adjuntas tried something new: their group Casa Pueblo worked with U.S. scientists to build several microgrids that can share power. This means if one microgrid goes down, the others keep working. During the blackout, the microgrids and some off-grid systems kept the lights on for dozens of homes and 15 small businesses. Casa Pueblo is now building a lab to test more ideas, hoping to connect microgrids that are farther apart. People believe these small, local systems will be even more important as more storms and heatwaves come.

Commenters praised the resilience of the microgrid system and liked the community approach. Some said this is a good example for other places with weak grids. Others worried that moving money away from solar could slow down clean energy. A few pointed out that big, central grids are hard to fix, while small, local systems recover faster. Some were inspired by how Puerto Ricans are building their own solutions, not waiting for government help. Others asked about costs and if poor people can afford solar and batteries, saying there should be help for those who need it most. One warned that even good microgrids need maintenance and planning. Most agreed that microgrids and solar are a smart way to make energy systems stronger, especially in places hit by storms and blackouts.

Now, let’s talk about a famous story from 1982, when Apple’s Lisa team tried to measure programmers’ work by how many lines of code they wrote each week. Bill Atkinson, a key engineer, thought this was a bad idea. He had just made Quickdraw six times faster and cut out about 2,000 lines of code. When asked for his weekly code report, he wrote “-2000.” After that, managers stopped asking for these reports.

The story shows that counting lines of code does not measure real progress. Bill’s work made the product better by having less code. The goal is not to write more code, but to make software work well. Sometimes, removing code is the most valuable work. Writing extra code just to look busy makes things worse. Managers should judge work by the quality and usefulness of the software, not by numbers.

Many commenters shared stories about deleting lots of code and feeling proud. Some said they had worked with teams where people copied and changed code just to make their numbers look better. Others joked that these habits made it easy to delete code later. Several said measuring work with simple numbers leads to bad results and hurts morale. Some linked the story to modern AI code generators, saying they can also create extra, unneeded code. Others remembered times when removing code made systems simpler and easier to maintain. A few doubted if the story happened exactly as told, but most agreed with the main point. Some said that, sadly, managers still make these mistakes, and good management is rare. Others pointed out that end users often do not notice code quality, but they do notice when software is slow or buggy. Many developers value simplicity, and wish management would too.

Next, we have a clever trick for saving money with OpenAI’s audio transcription. OpenAI charges by the length of the audio file, so the author found a way to save money by speeding up the audio before sending it for transcription. By using tools like ffmpeg to double or triple the audio speed, you can fit longer talks into OpenAI’s upload limits, spend less, and get results faster—with little loss in quality at 2x or 3x speed.

The author wanted to summarize a 40-minute talk but hit OpenAI’s 25-minute upload limit. By speeding up to 2x or 3x, the file was short enough, and costs dropped by up to 33%. There’s a script using yt-dlp to get audio from YouTube, ffmpeg to speed it up, and curl to send it to OpenAI’s API. Going to 4x speed made results much worse, so 2x or 3x is the sweet spot. Removing silences from the audio can save even more. The author also mentions that YouTube’s own auto-transcription or running Whisper locally can sometimes be better or cheaper, but the main focus is on saving with OpenAI’s API.

Many commenters agree the trick is clever and useful. Some share tips like using ffmpeg’s silenceremove. Others discuss that people have different listening speeds—some like 2x, others find 1.5x too fast. There’s debate on whether speeding up audio hurts understanding. Some say you get the main ideas, others warn you miss details. Some suggest local tools like Whisper for privacy and lower cost, and mention other cheap services. A few want to see more tests on speed and accuracy. Some worry about “contentmaxing”—always trying to consume faster—and if it’s good for learning. Others say it’s just practical when time is short. People also like that the article gives the main point and code quickly, and wish more tech writers would do the same.

Now, a creative project with AI and family. A father and his 7-year-old daughter made a 1-minute Minecraft-themed AI animation using just one photo as input. They used new AI tools like Wan Video, Flux Kontext, and DeepSeek, spending about 20 hours together on storyboarding, building the workflow, and rendering clips.

They started with a photo of the daughter in a tiger mask and pink yukata. Using Flux Kontext, they created a storyboard, editing images to keep the look the same in each scene. Prompts like “make the character look like a pixelated Minecraft character” helped guide the AI. Making the video, they used Wan Video’s FLF2V-14B model, which needs a first and last frame plus a text prompt. Each scene took a lot of GPU time. They tried to speed things up with a tool called Self Forcing, but it didn’t work with their model, so rendering was slower. For writing prompts, they used an LLM to describe what happens between two images. Sometimes the AI made mistakes, like forgetting the tiger’s wings, but it found creative fixes. The end result was a creative, if rough, animation made quickly and cheaply.

In the comments, one user congratulated the author and shared their own story of making animated videos with their young child, using Lego and Runway. They noted it is hard to keep children interested for long, and asked which part the author’s daughter enjoyed most. The comments were positive and supportive, showing that parents are interested in using AI for fun projects with kids, though keeping them engaged can be a challenge. People liked seeing how AI can bring families together for creative tech projects.

Next, a letter from Richard Feynman to a former student, who felt sad about working on “humble” problems instead of big, famous ones. Feynman explains that the best problems are the ones you can actually solve or help with, no matter how small. It’s a mistake to think only “grand” problems are valuable. Helping even one person or answering a simple question can be just as important. Feynman gives examples from his own work—many were small or even failures, but he enjoyed them and learned from them. He tells his student not to worry about being “nameless” or not working on big things—being useful to others is valuable too. He also admits he made a mistake by giving his student a problem, rather than letting him choose one that fit his own interest and skill.

In the comments, people say the letter is wise and comforting. Many are touched by Feynman’s simple way of explaining deep ideas. Readers like that he shows small wins and helping others are worthwhile. Some feel pressure to work on “big” things, but realize it’s OK to solve everyday problems and help those around us. Others agree, saying being a good family member or colleague is enough. Some point out that the student’s “humble” problem turned out to be important. A few mention how Feynman made complex things simple, and that solving any problem, big or small, can bring joy. One warns that today, companies may push developers to solve problems only for the company, so it’s important to choose your own path. Another says understanding what you truly want to work on is key, even with outside pressure. There are even lighter comments, like someone noting a cheesecake recipe on the same website. Overall, the letter inspires many to rethink what problems are worth their time and to value their own contributions.

Finally, we look at The Offline Club—a group that helps people meet in person and spend time together without using phones or computers. It offers events like phone-free dinners, reading sessions, and nature retreats, helping people relax and connect face-to-face. The website lists cities in Europe with local groups, and explains why people like the club: for real conversations, hobbies, and a break from screens. Businesses can organize offline events for their teams, and new chapters can be started in more cities. Reviews from members mention the calm atmosphere and making friends. The club now has events in 11 cities across 7 countries.

Hacker News commenters compare The Offline Club to Meetup, which some feel lost its way after changes and too many online events. Common problems for groups like this include finding good places to meet, making sure people show up, and stopping events from turning into sales pitches or being taken over by bad actors. Some suggest making events a bit harder to join, or charging a fee, to attract only those who are serious. Tips from experience include talking to local cafes for space, sending personal reminders, or overbooking to handle cancellations. There’s debate about whether scheduled events or spontaneous visits are better for real friendships. Some think scheduling is too formal, others say it’s needed as adults get busier. Many remember when user groups and clubs met before everything moved online. Most agree that finding ways to unplug and meet people in real life is important, even if it takes effort to make it work.

That’s all for today’s Hacker News Daily Podcast. Thanks for listening, and see you next time!