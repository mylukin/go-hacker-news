Hello everyone, this is the 2025-10-16 episode of Hacker News Daily Podcast. Today, we have a packed program with stories from the world of tech, software, AI, and digital life. Let’s get started.

First, we have a deep dive into Kindle DRM and user frustration. One writer shared their struggle after buying an ebook from Amazon. They wanted to read the book in another app, but the Kindle app kept crashing, and Amazon’s DRM made it impossible to download or back up the file. Even after paying, they could only read the book in the broken app and could not use tools like Calibre. Worse, Amazon could delete the book anytime, making it feel more like a rental than a real purchase.

Instead of giving up, the writer decided to reverse-engineer Amazon’s web DRM. They found that the Kindle web reader delivers book data in a TAR file, with page data, font glyphs, and more. Amazon’s DRM sends lists of glyph IDs, not real text. The mapping changes every five pages, so the same letter looks different each time. The writer had to process 184 random alphabets for a 920-page book—more than a million glyphs in total.

To make things harder, Amazon added fake hints to the font data, breaking simple scripts. OCR did not work well. The breakthrough came by rendering each glyph as an image, then using perceptual hashes to match each shape to the real letter, comparing with the original font files. This allowed the writer to decode the whole book, including special styling, and recreate it as an EPUB file.

The writer was proud of solving the challenge, but warned others to use this method only to back up books they own. The Hacker News comments were lively. Many agreed that DRM makes buying books worse than piracy and praised the technical skill. Others worried this tool could increase piracy or get the author in trouble. Some said publishers, not just Amazon, demand strong DRM. A few shared their own hacks or tools, like Calibre plugins. There was sadness that legal buyers are punished more than pirates, and some feared Amazon would make DRM even harder now. Many agreed that the real problem is we never really own digital media, and DRM keeps getting worse.

Next, let’s turn to robotics and the idea of a “Humanoid Olympics.” The article suggested that robot contests should focus on real household chores, like folding laundry, not just simple games. Robots are getting better at copying human actions, but still have trouble with force feedback, finger control, and touch. Their movements are only medium precise, so they can handle some laundry jobs but not complex tasks.

The writer listed challenge events, such as opening tricky doors, turning shirts right-side out, buttoning, using spray bottles, and even spreading peanut butter. Each highlights what robots cannot do well today—like dexterity and working with messy things. The goal is to inspire new research, with medals for winners. Only general-purpose, mobile robots running on their own can enter, and videos must show the full, real task.

In the comments, people agreed that laundry folding is a good benchmark, since it’s a real job people want help with. Others thought the challenges are too hard for now, but good for setting future goals. There was debate about whether robots must be mobile, or if arms fixed to tables are enough. Many pointed out that human hands are still far ahead for fine touch and grip. Safety, cost, and fair rules were also discussed. Some just enjoyed seeing funny robot failures. The community liked the idea of real-world tasks pushing robot progress.

Now, let’s look at a new feature from Claude AI called Skills. Skills are folders with instructions, scripts, and files that Claude can load when needed. Claude only uses a skill if it fits the job, so it stays fast. You can use built-in skills or make your own, and they work across Claude apps, Claude Code, and the API.

Skills stack together, work everywhere, load only what’s needed, and can run real code. This makes Claude more like a specialist for any task. Skills show up in Claude apps and are easy to make, with a helper to guide you. Teams can enable Skills for everyone, and developers can manage them through a console or API. There are example skills for Excel, PowerPoint, and PDF, and more in the marketplace or GitHub. Real examples include making PowerPoints, working with Notion, or helping Canva users. One finance team cut a day’s work to one hour using Skills.

Hacker News users had mixed feelings. Many liked how Skills make Claude more useful and could save time. Some worried about security, since Skills can run code, so you must trust the source. Others compared it to plugins in other AI tools but liked the easy setup. There were questions about limits and conflicts, and some thought it might be hard for non-technical users, but the helper makes it easier. Some users liked that big companies could roll out AI faster by packaging their own knowledge. Data privacy was discussed, but most agreed this is a smart step for making AI more useful at work.

Moving on, we have a story about Google’s Gemini 3.0 AI model. The writer tested it using A/B testing in Google AI Studio, before the official release, to check if it’s better at coding. They asked the AI to make an SVG image of an Xbox 360 controller—a good test of coding and understanding instructions. Gemini 3.0’s SVG was much better than older models or other AIs. The writer shared the prompt so others could try it.

The model name showed as a code, but the writer thinks it was Gemini 3.0 Pro. Gemini 3.0 took about 24 seconds longer to answer and gave a reply 40% longer, with more “reasoning” in the answer. This suggests a real improvement.

Commenters were excited about the better SVG and coding, saying AI is getting much better at turning text into images. Others warned that good SVG does not mean the model is smarter in all ways. Some shared their own tests, with mixed results. A few wished Google was more open about these tests. Others liked early A/B testing, while some worried about longer response times. Many agreed that seeing real examples, not just scores, is the best way to judge AI progress.

Now to Cloudflare’s new Sandbox SDK. This tool lets you run code, manage files, and expose services online inside secure containers. You can clone code from GitHub, run tests, and stream output in real time. You can create folders, read and write files, run shell commands, and see outputs right away. The SDK allows you to expose any running service on a public URL for quick previews, and supports long-running tasks. Everything runs in a sandbox for safety.

In the comments, some users were excited about how easy it is to set up and saw it as a strong tool for cloud app building. Others compared it to GitHub or Replit and wanted to know how Cloudflare’s version is different. Security was a big topic, since the SDK runs user code in the cloud. Some thought it could help with testing and integration, while others were cautious about relying on a new platform. People asked about pricing, speed, and if it works for big projects. Some liked the quick demo features, while others worried about vendor lock-in. Overall, the community is interested, but wants more details about limits, costs, and security.

Next, an article about why the writer loves using Hacker News. The writer explained the site to his daughter as a place for sharing and discussing interesting tech links. Anyone can post, vote, and comment. Good posts rise to the front page, and comments are often as valuable as the articles. The rules are simple, and most posts are about technology, math, science, or other smart topics, not politics or boring news.

The site is well-moderated and has users from around the world. Sometimes even experts or founders join in. The design is simple—just text, no images or videos, and usernames only, so there’s less showing off. Bad comments are hidden quickly. For the writer, it’s a place to learn, get inspired, and join smart talks. He says it’s the best social network for people who want to grow their minds.

In the comments, users agreed that Hacker News is great for learning and finding new projects. They like the simple design and polite, smart people. Some have found friends or jobs through the site. A few wish for more modern features, but most like the text-only style. Many say the best part is the thoughtful comments and chance to talk with experts. Some warn it can be a time sink, but most say it’s worth it for what you learn.

Now let’s talk about why a startup’s data model is so important. The article says the way your company organizes its core information shapes everything: how your app works, what features get built, and how you sell your product. Every company has a data model, even if they don’t think about it. If you don’t pick one on purpose, you might copy someone else’s by mistake, and it’s hard to change later.

Most companies should use common data models, but if you want to create something new or beat big players, a unique data model can give you an edge. Examples include Slack’s focus on channels, Notion’s “blocks,” Figma’s shared canvas, and Toast’s menu items. Companies with the right data model can add new products easily and stay special.

In the comments, some agreed that a good data model helps products grow and makes them hard to copy. Others said it’s hard to pick the right model early, and companies can get stuck with a bad one. Some shared their own stories about picking the right data model. Others said “data model” is more than just databases—it’s how the team thinks about the business. Some disagreed, saying “good enough” is fine for small startups, and that AI might change things in the future. Most agreed that a strong, clear data model makes a product better and harder to beat, but it’s not easy to get right. The best advice: listen to users and be ready to learn and adjust.

Next, an article about working hard versus creating value. The writer met a YouTuber who made over 5,000 videos in eight years but had very few subscribers. The main lesson is that people care about the value you create, not just your hard work. The idea of “Product-Market Fit” means matching your skills or product to a real need.

The writer shared a story from Amazon, where a team was blamed for slow progress but the real problem was a painful deployment process. By showing the business impact, they finally got support to fix it. The writer advises asking your boss or coworkers about their biggest pain points and focusing on solving those. This creates a “value loop” and more opportunities.

In the comments, many agreed that results matter more than effort. Some shared stories of working hard but not being noticed until they solved a real problem. Others warned that sometimes value is not noticed because of luck or office politics. Some said finding your true skill and product-market fit is not easy and takes time. Most agree: working hard is not enough—you need to work on things that matter to others.

Now let’s look at DoorDash and Waymo teaming up for self-driving deliveries in Phoenix. They’re also giving DashPass members $10 off one Waymo ride per month in LA, San Francisco, and Phoenix until the end of the year. The autonomous delivery service is being tested now and will grow to more places. DoorDash’s special platform chooses the best way to deliver—using people, robots, drones, or Waymo cars. Members get special deals and have saved a lot since DashPass began in 2018.

In the comments, some people are excited about real self-driving deliveries, thinking it could make things faster and cheaper. Others wonder about jobs, safety, and how well cars will handle surprises or bad weather. Some doubt the service will work everywhere, while others share good experiences with self-driving cars. The community is split—some hopeful, others cautious.

Finally, Zed code editor now lets you use OpenAI’s Codex AI tool right inside the app, thanks to a new protocol called ACP. You can pick Codex from the menu and start coding with AI help, with no extra setup. ACP lets Zed connect to different coding AIs, like Codex, Claude Code, or Gemini CLI. Zed does not handle your code—your code goes only to the AI provider.

The Codex-ACP adapter is open source, so anyone can use it with other editors. Each AI agent works differently—some let you switch models, others keep you on one. Some store chat history, others don’t. Codex runs terminal commands itself and streams results to Zed, with support for PTY and non-PTY modes. There are pros and cons: PTY allows more interactivity and color, but can get stuck waiting for input. Non-PTY avoids deadlocks but is less interactive.

In the comments, users were excited about ACP making editors more open to new AI features. Many praised Zed for open-sourcing the adapter and keeping code private. Some thought PTY and non-PTY modes could be confusing and hoped for better solutions. Developers discussed adding new agents and debated which AI is best for coding help. Many liked that Zed now works on all platforms and plan to try it.

That’s all for today’s Hacker News Daily Podcast. Thank you for listening. We hope you enjoyed this overview of the latest stories and discussions from the tech world. See you next time!