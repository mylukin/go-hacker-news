Hello everyone, this is the 2025-10-30 episode of Hacker News Daily Podcast. Today, we have a full lineup of tech stories and community highlights for you.

First, Affinity Studio, a well-known creative app for design, photo editing, and page layout, is now free to download for desktop users. You just need a Canva account to use all the main features without paying. Affinity Studio gives you strong tools for vector drawing, pixel editing, and print-ready layout in one app. You can mix pixel and vector work, use live filters, edit RAW photos, and export your work in many formats like PSD, AI, PDF, and SVG. If you have Canva premium, you also get extra AI tools, such as Generative Fill and AI image creation, right inside Affinity. The app works on Windows and macOS, with an iPad version coming soon. You can install it on as many devices as you want, and it supports many languages.

On Hacker News, users had mixed feelings. Many were excited to see a high-quality creative tool become free, calling it a big win for users who want powerful design tools without high costs. But some people worried about the future—will Affinity stay free, or will Canva change things later? Some did not like needing a Canva account, saying they prefer stand-alone apps. Users who paid for Affinity in the past felt a bit upset, wondering if their old licenses still have value. There were also concerns about file lock-in, since the new free version’s files cannot be opened by older Affinity apps. Some users liked the AI features for premium Canva users, while others were not interested in AI or paying extra. Overall, most saw this as good news for creative people, but there are concerns about future changes, data privacy, and losing stand-alone software.

Next, we look at how the human ear processes sound. Many people think the ear works like a Fourier transform, but this is not true. The cochlea in the ear uses a special method to split sound into different frequencies. The basilar membrane inside the cochlea reacts to different sounds—high tones at the base, low tones at the tip. Hair cells on the membrane turn these vibrations into electrical signals for the brain. The ear uses filters that balance time and frequency; at high frequencies, they are better at timing, and at low frequencies, they are better at picking out the frequency. This is different from a true Fourier transform, which loses time information. The ear’s filters work more like wavelets or Gabor filters, which keep both time and frequency details.

Hacker News readers agreed that the ear is not simply doing a Fourier transform. Some pointed out that nature’s way is more complex, and that the ear’s method matches the types of sounds we usually hear, like speech or animal calls. There was also discussion about how the ear and brain together help us pick out important sounds in noisy places, and how musicians can notice things that standard signal tools might miss. Some users wished for more details about how the brain works with these signals, and others discussed how this knowledge could help with hearing aids and audio software. Overall, readers found the topic interesting and agreed that nature’s solutions are often different from engineering.

Moving on, there is a new open-source version control system called Jujutsu, or JJ, which works with Git and aims to be both simple and powerful. At JJ Con 2025, Martin von Zweigbergk explained JJ’s design and future plans. JJ can work with Git repositories but uses a new way of tracking changes, making the history cleaner and commands easier to use. It is written in Rust for speed and safety and has features like smart branching, easy merges, and safe undo. The team wants JJ to be friendly for new users but strong enough for big projects. They plan to add better team support and more plugins. JJ is open source, and Google supports the project.

Hacker News users had mixed feelings. Some liked JJ’s ideas and thought it could solve problems they have with Git. Others said JJ is hard to learn, or that the talk about it was slow and hard to follow. There was some interest in JJ’s future, and if it can replace Git for real projects. Some users worry about changing tools and if JJ can match Git’s reliability, but most are curious and want to try JJ on small projects first.

Next up, there’s a new way to make spring and bounce animations using only CSS, thanks to the new linear() timing function. In the past, you needed JavaScript for these effects, but now you can make complex motion by listing many points in a linear() function. This lets you shape smooth spring or bounce effects by overshooting and bouncing back, just like a real spring. There are online tools to help you create these point lists. Some limits exist: CSS animations need a fixed duration, and transitions handle interruptions in a simple way, unlike real physics. Having many points in your CSS could make files bigger, but tests show it does not hurt performance. It’s best to store your linear() strings in CSS variables and use fallbacks for browsers that do not support it.

Commenters were excited to use spring and bounce effects without JavaScript, saying it will make sites faster and simpler. Some worry about browser support, and others say writing these long strings by hand is hard—using tools is best. There are discussions about file size, but using variables and gzip keeps things small. Some still prefer JavaScript for more realistic physics, but most agree this is a great step forward for CSS.

Now, let’s talk about TruthWave, a new website for whistleblowers. It lets you report bad actions by companies without giving your real name. You use secure, encrypted messages, and only share your identity if you want. If your tip leads to action and TruthWave gets money from a case, you get a share—$200 million out of every $1 billion collected. TruthWave is looking at big problems like healthcare scams, price fixing, and financial fraud.

On Hacker News, some people liked the idea and said whistleblowers need more support. Others worried about safety—what if the system is hacked and names get out? Some questioned if big rewards might lead to false tips. There were also discussions about whether the platform can really keep things anonymous and if it works in countries with strict laws. Some users suggested open-sourcing the code for trust, and others want to see proof that the system works. Overall, people hope it brings change but have questions about safety and trust.

MinecraftHDL is a fun project that turns Verilog code into Minecraft redstone circuits. Started at McGill University, it is meant for learning, not for making the best or smallest machines. You write your digital circuit in Verilog, and MinecraftHDL builds the same logic in Minecraft. It works for most simple circuits, but does not support memory or feedback, so things like counters or RAM are not possible. The circuits are often big and not efficient, but it’s a great way to teach digital logic and show students the difference between hardware and software.

Many commenters thought this project was creative and fun. Some remembered building redstone circuits by hand and wished they had such a tool. Others pointed out the limits, like circuit size and no support for memory. Some liked that it uses standard hardware languages, making it easier for students to learn. Most agreed it’s a great idea for education and showing off in creative mode, even if not practical for survival mode.

Next, what happens to a military plane’s autopilot if the pilot ejects? The answer is that autopilot does not do anything special. Ejecting almost always means the plane is too damaged to save. Losing the canopy and pilot changes the air flow and balance, making the plane harder to fly. Autopilot systems in jets are not designed to land the plane or pick a safe crash spot after ejection. Usually, autopilot just keeps doing what it was doing, if it is still working. Some pilots might set the autopilot to fly straight before ejecting, but there is no special software for this. In rare cases, some secret planes might destroy themselves, but this is not common.

In the comments, people joked that autopilot is not needed, since the plane is usually lost. Some pointed out that in battle, autopilot is usually off. Others wondered about self-destruct modes, but most agree this is just rumor. A few noted that autopilot is not smart enough to handle a damaged plane, and some explained that modern fly-by-wire systems always help with control, but do not take over after ejection.

Now, let’s look at a math trick: 987654321 divided by 123456789 is very close to 8. The writer checked this in different number bases and found that, for any base, if you make two numbers—one with digits in order from largest to smallest, and one from smallest to largest—the ratio is always near b minus 2, with a small leftover. The leftover gets smaller as the base gets bigger. The article gives code to check this for many bases and notes that computers sometimes round the answer to an exact integer, depending on how they store numbers.

In the comments, people shared formulas for the leftover part and connected the trick to known math patterns. Some remembered similar calculator tricks, and others helped make the explanation clearer. Together, they enjoyed finding both the fun and the deeper math behind the trick.

Turning to security, hackers have uploaded over 100 malicious packages to NPM, which were downloaded more than 86,000 times. The attackers used “Remote Dynamic Dependencies” (RDD), letting packages download code from unsafe websites without being noticed by developers or security tools. This makes it easy to hide harmful code, which then searches for sensitive data like passwords and sends it back to the hacker. Some package names were made up by AI chatbots, making them sound real and tricking developers.

In the comments, some said NPM should do more to stop this type of attack. Others pointed out it’s hard to trust any software you download, and even experienced developers can be fooled. There was talk about how AI chatbots can help attackers make convincing package names. Some users shared security tips, like using only well-known packages and scanning code, but others replied that even popular packages can be hacked. There was debate about whether NPM should be made safer by default or if it’s up to developers to protect themselves. Most agree the problem is serious and will be hard to fix.

Finally, someone built a tool that shows code changes as a colored heatmap to help with code reviews. The heatmap uses color to show which parts of a code change need more attention, not just for bugs, but also for things like hard-coded secrets or confusing logic. To use it, you change “github.com” to “0github.com” in any GitHub pull request link. The tool copies the code, uses a large AI model to check every change, and shows a heatmap over the code. It is open source, so anyone can see how it works or help improve it.

Some users liked the idea, saying it can help reviewers focus on important lines in big code changes. Others were worried about privacy, since the code is sent to another server for checking. Some wondered if the tool could miss important problems, or about the cost of running an AI on every line. There were also ideas about using it with other code review tools, and most agreed that, even with AI tools, human review is still very important.

That’s all for today’s episode. Thank you for listening to Hacker News Daily Podcast. We hope you enjoyed these stories and insights. See you next time!